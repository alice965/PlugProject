<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="friend">
	<select id="listReq" resultType="java.util.HashMap">
		select othergroup.*, m.nickname	as onenick from 
		(select f.*, m.nickname as othernick
		from friend f join member m on f.other=m.id) othergroup 
		join member m on
		othergroup.one=m.id 
		where othergroup.one=#{id} and othergroup.status='req'
	</select>
	<select id="listRcv" resultType="java.util.HashMap">
		select othergroup.*, m.nickname	as onenick from 
    	(select f.*, m.nickname as othernick
		from friend f join member m on f.other=m.id) othergroup 
        join member m on
		othergroup.one=m.id
		where othergroup.other=#{id} and othergroup.status='req'
	</select>
	<select id="listFriend" resultType="java.util.HashMap">
		select t1.*, m1.nickname as othernick from  (select f.*, m.nickname as onenick from friend f
      join member m on m.id=f.one ) t1 join member m1 on  t1.other = m1.id where t1.status='frd' and 
      (one = #{id} or other=#{id})
	</select>
	<insert id="add">
		insert into friend values(friend_seq.nextval, #{one}, #{other}, '',
		sysdate, 'req')
	</insert>
	<select id="readOne" resultType="java.util.HashMap">
		select a.* , m.nickname as
		othernick from (select f.*, m.nickname as onenick from friend f join
		member m on f.one= m.id) a join member m on a.other =m.id
		where one=#{one} and other=#{other}
	</select>
	<select id="getNick" resultType="java.util.HashMap">
		select * from member where
		id=#{other}
	</select>
	<delete id="delete"> <!-- 한쪽에서 지우면 다른 한쪽도 지워져야 함.. -->
		delete from friend where other=#{other} and
		one=#{one}
	</delete>
	<update id="accept">
		update friend set adddate=sysdate, status='frd' where one=#{one} and  other=#{other}
	</update>
	

</mapper>